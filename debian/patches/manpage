Description: Fix some syntax errors in the manpage.
  This patch fixes the following syntax errors in the manpage:

  > lintian -IE fio_1.50-1_i386.changes
  W: fio: manpage-has-errors-from-man usr/share/man/man1/fio.1.gz 85:
     warning: macro `b',' not defined
  I: fio: spelling-error-in-manpage usr/share/man/man1/fio.1.gz seperated separated
  I: fio: spelling-error-in-manpage usr/share/man/man1/fio.1.gz seperated separated
  I: fio: spelling-error-in-manpage usr/share/man/man1/fio.1.gz preceeding preceding
  I: fio: hyphen-used-as-minus-sign usr/share/man/man1/fio.1.gz:851
  I: fio: spelling-error-in-manpage usr/share/man/man1/fio.1.gz dependant dependent
Forwarded: Jens Axboe <axboe@kernel.dk>
Author: Martin Steigerwald <ms@teamix.de>

---
Index: fio/fio.1
===================================================================
--- fio.orig/fio.1	2011-06-27 12:39:32.683976586 +0200
+++ fio/fio.1	2011-06-27 12:39:39.023981943 +0200
@@ -45,7 +45,7 @@
 .TP
 .BI \-\-debug \fR=\fPtype
 Enable verbose tracing of various fio actions. May be `all' for all types
-or individual types seperated by a comma (eg \-\-debug=io,file). `help' will
+or individual types separated by a comma (eg \-\-debug=io,file). `help' will
 list all available tracing options.
 .TP
 .B \-\-help
@@ -81,8 +81,8 @@
 of the value.  Accepted suffixes are `k', 'M', 'G', 'T', and 'P', denoting
 kilo (1024), mega (1024^2), giga (1024^3), tera (1024^4), and peta (1024^5)
 respectively. The suffix is not case sensitive. If prefixed with '0x', the
-value is assumed to be base 16 (hexadecimal). A suffix may include a trailing
-'b', for instance 'kb' is identical to 'k'. You can specify a base 10 value
+value is assumed to be base 16 (hexadecimal). A suffix may include a trailing 'b',
+for instance 'kb' is identical to 'k'. You can specify a base 10 value
 by using 'KiB', 'MiB', 'GiB', etc. This is useful for disk drives where
 values are often given in base 10 values. Specifying '30GiB' will get you
 30*1000^3 bytes.
@@ -268,7 +268,7 @@
 not just even splits between them. With this option, you can weight various
 block sizes for exact control of the issued IO for a job that has mixed
 block sizes. The format of the option is bssplit=blocksize/percentage,
-optionally adding as many definitions as needed seperated by a colon.
+optionally adding as many definitions as needed separated by a colon.
 Example: bssplit=4k/10:64k/50:32k/40 would issue 50% 64k blocks, 10% 4k
 blocks and 40% 32k blocks. \fBbssplit\fR also supports giving separate
 splits to reads and writes. The format is identical to what the
@@ -735,7 +735,7 @@
 will be verified more than once.
 .TP
 .B stonewall
-Wait for preceeding jobs in the job file to exit before starting this one.
+Wait for preceding jobs in the job file to exit before starting this one.
 \fBstonewall\fR implies \fBnew_group\fR.
 .TP
 .B new_group
@@ -854,7 +854,7 @@
 The system must have a mounted cgroup blkio mount point for this to work. If
 your system doesn't have it mounted, you can do so with:
 
-# mount -t cgroup -o blkio none /cgroup
+# mount \-t cgroup \-o blkio none /cgroup
 .TP
 .BI cgroup_weight \fR=\fPint
 Set the weight of the cgroup to this value. See the documentation that comes
@@ -1096,7 +1096,7 @@
 .RE
 .RE
 .P
-Error Info (dependant on continue_on_error, default off):
+Error Info (dependent on continue_on_error, default off):
 .RS
 .B total # errors, first error code 
 .RE
